version: '3.8'

services:
  
  productmanagement-api:
    container_name: productmanagement_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8080" 
    environment:
     
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD}
      - JwtSettings__Secret=${JWT_SECRET}
     
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - productmanagement_network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped


  postgres:
    image: postgres:15
    container_name: productmanagement_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - productmanagement_network
    restart: unless-stopped


  redis:
    image: redis:7-alpine
    container_name: productmanagement_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - productmanagement_network
    restart: unless-stopped
  

  pgadmin:
    image: dpage/pgadmin4
    container_name: productmanagement_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - productmanagement_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  productmanagement_network:
    driver: bridge